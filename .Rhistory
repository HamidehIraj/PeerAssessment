body_gyro_y_train_sd  <- as.data.frame(t(t(body_gyro_y_train)))
body_gyro_z_train_sd  <- as.data.frame(t(t(body_gyro_z_train)))
#------------------------------------------------------------------
total_acc_x_train_sd  <- as.data.frame(t(t(total_acc_x_train)))
total_acc_y_train_sd  <- as.data.frame(t(t(total_acc_y_train)))
total_acc_z_train_sd  <- as.data.frame(t(t(total_acc_z_train)))
#------------------------------------------------------------------------
subject_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
#str(subject_train )
X_train      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
Y_train      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Y_train.txt")
Y_train$Activity <- Y_train$V1
Y_train$Activity[Y_train$Activity == 1] <- "walking"
Y_train$Activity[Y_train$Activity == 2] <- "walking_upstairs"
Y_train$Activity[Y_train$Activity == 3] <- "walking_downstairs"
Y_train$Activity[Y_train$Activity == 4] <- "sitting"
Y_train$Activity[Y_train$Activity == 5] <- "standing"
Y_train$Activity[Y_train$Activity == 6] <- "laying"
#--------------------------------------------------------------------------
#combining dataframes
train             <- cbind(subject_train, Y_train,
body_acc_x_train_mean,  body_acc_y_train_mean , body_acc_z_train_mean ,
body_gyro_x_train_mean, body_gyro_y_train_mean, body_gyro_z_train_mean,
total_acc_x_train_mean, total_acc_y_train_mean, total_acc_z_train_mean,
body_acc_x_train_sd,    body_acc_y_train_sd,    body_acc_z_train_sd,
body_gyro_x_train_sd ,  body_gyro_y_train_sd ,  body_gyro_z_train_sd ,
total_acc_x_train_sd ,  total_acc_y_train_sd ,  total_acc_z_train_sd )
dim(body_acc_x_train_mean )
dim(body_acc_x_train_sd)
body_acc_x_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt")
body_acc_x_train_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_x_train,dims=1)))))
library(matrixStats)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
rowSds(x)
t(rowSds(x))
t(t(rowSds(x)))
as.data.frame(t(t(rowSds(x))))
body_acc_x_train_sd   <- as.data.frame(t(t(rowSds(body_acc_x_train))))
View(body_acc_x_train_mean)
View(body_acc_x_train_mean)
View(body_acc_x_train_sd)
View(body_acc_x_train_sd)
body_gyro_x_train_sd  <- as.data.frame(t(t(rowSds(body_gyro_x_train))))
body_gyro_x_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt")
body_gyro_x_train_sd  <- as.data.frame(t(t(rowSds(body_gyro_x_train))))
View(body_gyro_x_train_sd)
View(body_gyro_x_train_sd)
total_acc_x_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_x_train,dims=1)))))
total_acc_x_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt")
total_acc_x_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_x_train,dims=1)))))
rm(x)
# Loading data into R
body_acc_x_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_acc_x_train.txt")
body_acc_y_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_acc_y_train.txt")
body_acc_z_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_acc_z_train.txt")
#--------------------------------
body_gyro_x_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_gyro_x_train.txt")
body_gyro_y_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_gyro_y_train.txt")
body_gyro_z_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/body_gyro_z_train.txt")
#--------------------------------
total_acc_x_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/total_acc_x_train.txt")
total_acc_y_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/total_acc_y_train.txt")
total_acc_z_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Inertial Signals/total_acc_z_train.txt")
#Calculating rowMeans
body_acc_x_train_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_x_train,dims=1)))))
body_acc_y_train_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_y_train,dims=1)))))
body_acc_z_train_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_z_train,dims=1)))))
#--------------------------------------------------------
body_gyro_x_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_x_train,dims=1)))))
body_gyro_y_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_y_train,dims=1)))))
body_gyro_z_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_z_train,dims=1)))))
#--------------------------------------------------------
total_acc_x_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_x_train,dims=1)))))
total_acc_y_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_y_train,dims=1)))))
total_acc_z_train_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_z_train,dims=1)))))
#dim(body_acc_x_train_mean )
#---------------------------------------------------------------
# Calculating Standard Deviation
library(matrixStats)
as.data.frame(t(t(rowSds(x))))
body_acc_x_train_sd   <- as.data.frame(t(t(rowSds(body_acc_x_train))))
body_acc_y_train_sd   <- as.data.frame(t(t(rowSds(body_acc_y_train))))
body_acc_z_train_sd   <- as.data.frame(t(t(rowSds(body_acc_z_train))))
#------------------------------------------------------------------
body_gyro_x_train_sd  <- as.data.frame(t(t(rowSds(body_gyro_x_train))))
body_gyro_y_train_sd  <- as.data.frame(t(t(rowSds(body_gyro_y_train))))
body_gyro_z_train_sd  <- as.data.frame(t(t(rowSds(body_gyro_z_train))))
#------------------------------------------------------------------
total_acc_x_train_sd  <- as.data.frame(t(t(rowSds(total_acc_x_train))))
total_acc_y_train_sd  <- as.data.frame(t(t(rowSds(total_acc_y_train))))
total_acc_z_train_sd  <- as.data.frame(t(t(rowSds(total_acc_z_train))))
#dim(body_acc_x_train_sd)
#------------------------------------------------------------------------
subject_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
#str(subject_train )
X_train      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/X_train.txt")
Y_train      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Y_train.txt")
Y_train$Activity <- Y_train$V1
Y_train$Activity[Y_train$Activity == 1] <- "walking"
Y_train$Activity[Y_train$Activity == 2] <- "walking_upstairs"
Y_train$Activity[Y_train$Activity == 3] <- "walking_downstairs"
Y_train$Activity[Y_train$Activity == 4] <- "sitting"
Y_train$Activity[Y_train$Activity == 5] <- "standing"
Y_train$Activity[Y_train$Activity == 6] <- "laying"
#--------------------------------------------------------------------------
#combining dataframes
train             <- cbind(subject_train, Y_train,
body_acc_x_train_mean,  body_acc_y_train_mean , body_acc_z_train_mean ,
body_gyro_x_train_mean, body_gyro_y_train_mean, body_gyro_z_train_mean,
total_acc_x_train_mean, total_acc_y_train_mean, total_acc_z_train_mean,
body_acc_x_train_sd,    body_acc_y_train_sd,    body_acc_z_train_sd,
body_gyro_x_train_sd ,  body_gyro_y_train_sd ,  body_gyro_z_train_sd ,
total_acc_x_train_sd ,  total_acc_y_train_sd ,  total_acc_z_train_sd )
View(train)
View(train)
# Loading data into R
body_acc_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
body_acc_y_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt")
body_acc_z_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt")
#--------------------------------
body_gyro_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
body_gyro_y_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt")
body_gyro_z_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt")
#--------------------------------
total_acc_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt")
total_acc_y_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt")
total_acc_z_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt")
#Calculating rowMeans
body_acc_x_test_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_x_test,dims=1)))))
body_acc_y_test_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_y_test,dims=1)))))
body_acc_z_test_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_z_test,dims=1)))))
#--------------------------------------------------------
body_gyro_x_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_x_test,dims=1)))))
body_gyro_y_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_y_test,dims=1)))))
body_gyro_z_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_z_test,dims=1)))))
#--------------------------------------------------------
total_acc_x_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_x_test,dims=1)))))
total_acc_y_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_y_test,dims=1)))))
total_acc_z_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_z_test,dims=1)))))
#dim(body_acc_x_test_mean )
#---------------------------------------------------------------
# Calculating Standard Deviation
library(matrixStats)
body_acc_x_test_sd   <- as.data.frame(t(t(rowSds(body_acc_x_test))))
body_acc_y_test_sd   <- as.data.frame(t(t(rowSds(body_acc_y_test))))
body_acc_z_test_sd   <- as.data.frame(t(t(rowSds(body_acc_z_test))))
#------------------------------------------------------------------
body_gyro_x_test_sd  <- as.data.frame(t(t(rowSds(body_gyro_x_test))))
body_gyro_y_test_sd  <- as.data.frame(t(t(rowSds(body_gyro_y_test))))
body_gyro_z_test_sd  <- as.data.frame(t(t(rowSds(body_gyro_z_test))))
#------------------------------------------------------------------
total_acc_x_test_sd  <- as.data.frame(t(t(rowSds(total_acc_x_test))))
total_acc_y_test_sd  <- as.data.frame(t(t(rowSds(total_acc_y_test))))
total_acc_z_test_sd  <- as.data.frame(t(t(rowSds(total_acc_z_test))))
#dim(body_acc_x_test_sd)
#------------------------------------------------------------------------
subject_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
#str(subject_test )
X_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
Y_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Y_test.txt")
Y_test$Activity <- Y_test$V1
Y_test$Activity[Y_test$Activity == 1] <- "walking"
Y_test$Activity[Y_test$Activity == 2] <- "walking_upstairs"
Y_test$Activity[Y_test$Activity == 3] <- "walking_downstairs"
Y_test$Activity[Y_test$Activity == 4] <- "sitting"
Y_test$Activity[Y_test$Activity == 5] <- "standing"
Y_test$Activity[Y_test$Activity == 6] <- "laying"
#--------------------------------------------------------------------------
#combining dataframes
test             <- cbind(subject_test, Y_test,
body_acc_x_test_mean,  body_acc_y_test_mean , body_acc_z_test_mean ,
body_gyro_x_test_mean, body_gyro_y_test_mean, body_gyro_z_test_mean,
total_acc_x_test_mean, total_acc_y_test_mean, total_acc_z_test_mean,
body_acc_x_test_sd,    body_acc_y_test_sd,    body_acc_z_test_sd,
body_gyro_x_test_sd ,  body_gyro_y_test_sd ,  body_gyro_z_test_sd ,
total_acc_x_test_sd ,  total_acc_y_test_sd ,  total_acc_z_test_sd )
View(test)
View(test)
source("samsungData-TrainData.R)
][]\[\][\]
source("samsungData-TrainData.R")
source("samsungData-TrainData.R")
source("samsungData-TestData.R")
FullData <- rbind(train,test)
View(FullData)
subject_train <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/subject_train.txt")
Y_train$Activity <- Y_train$V1
Y_train      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/train/Y_train.txt")
Y_train$Activity <- Y_train$V1
names(subject_train) <-c("Activity ID","Activity")
names(Y_train) <-c("Activity ID","Activity")
View(Y_train)
View(Y_train)
Y_train$Activity[Y_train$Activity == 1] <- "walking"
Y_train$Activity[Y_train$Activity == 2] <- "walking_upstairs"
Y_train$Activity[Y_train$Activity == 3] <- "walking_downstairs"
Y_train$Activity[Y_train$Activity == 4] <- "sitting"
Y_train$Activity[Y_train$Activity == 5] <- "standing"
Y_train$Activity[Y_train$Activity == 6] <- "laying"
View(Y_train)
View(Y_train)
View(subject_train)
View(subject_train)
subject_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt",header=TRUE)
View(subject_test)
View(subject_test)
names(subject_test)
names(subject_test) <- c("subjectID")
View(subject_test)
body_acc_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt",header=TRUE)
View(body_acc_x_test)
View(body_acc_x_test)
features <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/features.txt.txt")
features <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/features.txt")
View(features)
View(features)
features[1:6,2]
class(features[1:6,2])
class(as.character(features[1:6,2]))
as.character(features[121:126,2]
as.character(features[121:126,2])
as.character(features[121:126,2])
# Loading data into R
body_acc_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
body_acc_y_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_y_test.txt")
body_acc_z_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_acc_z_test.txt")
#--------------------------------
body_gyro_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_gyro_x_test.txt")
body_gyro_y_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_gyro_y_test.txt")
body_gyro_z_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/body_gyro_z_test.txt")
#--------------------------------
# total_acc_x_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/total_acc_x_test.txt")
# total_acc_y_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/total_acc_y_test.txt")
# total_acc_z_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Inertial Signals/total_acc_z_test.txt")
#Calculating rowMeans
body_acc_x_test_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_x_test,dims=1)))))
body_acc_y_test_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_y_test,dims=1)))))
body_acc_z_test_mean   <- as.data.frame(t(t(as.matrix(rowMeans(body_acc_z_test,dims=1)))))
#--------------------------------------------------------
body_gyro_x_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_x_test,dims=1)))))
body_gyro_y_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_y_test,dims=1)))))
body_gyro_z_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(body_gyro_z_test,dims=1)))))
#--------------------------------------------------------
# total_acc_x_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_x_test,dims=1)))))
# total_acc_y_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_y_test,dims=1)))))
# total_acc_z_test_mean  <- as.data.frame(t(t(as.matrix(rowMeans(total_acc_z_test,dims=1)))))
#dim(body_acc_x_test_mean )
#---------------------------------------------------------------
# Calculating Standard Deviation
require(matrixStats,quietly=TRUE)
body_acc_x_test_sd   <- as.data.frame(t(t(rowSds(body_acc_x_test))))
body_acc_y_test_sd   <- as.data.frame(t(t(rowSds(body_acc_y_test))))
body_acc_z_test_sd   <- as.data.frame(t(t(rowSds(body_acc_z_test))))
#------------------------------------------------------------------
body_gyro_x_test_sd  <- as.data.frame(t(t(rowSds(body_gyro_x_test))))
body_gyro_y_test_sd  <- as.data.frame(t(t(rowSds(body_gyro_y_test))))
body_gyro_z_test_sd  <- as.data.frame(t(t(rowSds(body_gyro_z_test))))
#------------------------------------------------------------------
# total_acc_x_test_sd  <- as.data.frame(t(t(rowSds(total_acc_x_test))))
# total_acc_y_test_sd  <- as.data.frame(t(t(rowSds(total_acc_y_test))))
# total_acc_z_test_sd  <- as.data.frame(t(t(rowSds(total_acc_z_test))))
#dim(body_acc_x_test_sd)
#------------------------------------------------------------------------
subject_test <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/subject_test.txt")
names(subject_test) <- c("subjectID")
#X_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/X_test.txt")
Y_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Y_test.txt")
#-----------------------------------------------------------------------
# Replacing column names
Y_test$Activity <- Y_test$V1
Y_test$Activity[Y_test$Activity == 1] <- "walking"
Y_test$Activity[Y_test$Activity == 2] <- "walking_upstairs"
Y_test$Activity[Y_test$Activity == 3] <- "walking_downstairs"
Y_test$Activity[Y_test$Activity == 4] <- "sitting"
Y_test$Activity[Y_test$Activity == 5] <- "standing"
Y_test$Activity[Y_test$Activity == 6] <- "laying"
#--------------------------------------------------------------------------
#combining dataframes
test             <- cbind(subject_test, Y_test,
body_acc_x_test_mean,  body_acc_y_test_mean , body_acc_z_test_mean ,
body_acc_x_test_sd,    body_acc_y_test_sd,    body_acc_z_test_sd,
body_gyro_x_test_mean, body_gyro_y_test_mean, body_gyro_z_test_mean,
body_gyro_x_test_sd ,  body_gyro_y_test_sd ,  body_gyro_z_test_sd )
#                            total_acc_x_test_mean, total_acc_y_test_mean, total_acc_z_test_mean,
#                            total_acc_x_test_sd ,  total_acc_y_test_sd ,  total_acc_z_test_sd )
features <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/features.txt")
names(test) <- c("subjectID","ActivityID","Activity",
as.character(features[1:6,2]),
as.character(features[121:126,2])
)
View(test)
View(test)
# making train and test data frames
source("samsungData-TrainData.R")
source("samsungData-TestData.R")
# combining train and test datasets
FullData <- rbind(train,test)
View(FullData)
View(FullData)
activity_lables <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
View(activity_lables)
View(activity_lables)
View(Y_test)
View(Y_test)
merge(Y_test,activity_lables, by.x=V1,by.y=V1 )
merge(Y_test,activity_lables, by.x=Y_test$V1, by.y=activity_lables$V1 )
View(Y_test)
View(Y_test)
names(activity_labels) <- c("ActivityID","Activity")
activity_labels <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
names(activity_labels) <- c("ActivityID","Activity")
Y_test$Activity[Y_test$Activity == activity_labels$ActivityID] <- activity_labels$Activity
Y_test$Activity
View(Y_test)
View(Y_test)
Y_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Y_test.txt")
View(Y_test)
View(Y_test)
activity_labels <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt")
names(activity_labels) <- c("ActivityID","Activity")
Y_test$V2 <- Y_test$V1
View(Y_test)
View(Y_test)
Y_test$Activity[Y_test$Activity == activity_labels$ActivityID] <- activity_labels$Activity
Y_test[Y_test$Activity == activity_labels$ActivityID] <- activity_labels$Activity
View(Y_test)
View(Y_test)
Y_test[Y_test$Activity == activity_labels$ActivityID]
Y_test$Activity
Y_test[Y_test$ActivityID == activity_labels$ActivityID]
View(Y_test)
View(Y_test)
names(Y_test) <- c("ActivityID","Activity")
Y_test[Y_test$ActivityID == activity_labels$ActivityID]
View(Y_test)
View(Y_test)
View(activity_labels)
View(activity_labels)
str(activity_labels)
activity_labels <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/activity_labels.txt",stringsAsFactors=FALSE)
names(activity_labels) <- c("ActivityID","Activity")
str(activity_labels)
Y_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Y_test.txt",stringsAsFactors=FALSE)
Y_test$V2 <- Y_test$V1
names(Y_test) <- c("ActivityID","Activity")
Y_test[Y_test$ActivityID == activity_labels$ActivityID]
str(Y_test)
str(Y_test)
str(activity_labels)
Y_test[Y_test$ActivityID]
Y_test$ActivityID
Y_test[,ActivityID == activity_labels$ActivityID]
Y_test[,which(ActivityID == activity_labels$ActivityID)]
Y_test[,which(Y_test$ActivityID == activity_labels$ActivityID)]
which(Y_test$ActivityID == activity_labels$ActivityID)
Y_test[,which(Y_test$ActivityID == activity_labels$ActivityID)] <- activity_labels$Activity
Y_test[,which(Y_test$ActivityID == activity_labels$ActivityID)] <- activity_labels$Activity
for (i in nrow(activity_labels))
{
Y_test[,which(Y_test$ActivityID == activity_labels[1,i])] <- activity_labels[2,i]
}
View(Y_test)
View(Y_test)
i=1
Y_test[,which(Y_test$ActivityID == activity_labels[1,i])] <- activity_labels[2,i]
Y_test[,which(Y_test$ActivityID == activity_labels[1,i])]
activity_labels[1,i]
activity_labels[2,i]
activity_labels[i,1])
activity_labels[i,1]
activity_labels[i,2]
Y_test[,which(Y_test$ActivityID == activity_labels[i,1])] <- activity_labels[i,2]
Y_test[,which(Y_test$ActivityID == activity_labels[i,1])]
Y_test$ActivityID[,which(Y_test$ActivityID == activity_labels[i,1])] <- activity_labels[i,2]
Y_test$ActivityID[,which(Y_test$ActivityID == activity_labels[i,1])]
Y_test$ActivityID
Y_test[,which(Y_test$ActivityID == activity_labels[i,1])]
Y_test$ActivityID[,which(Y_test$ActivityID == activity_labels[i,1])] <- activity_labels[i,2]
activity_labels[i,2]
activity_labels[i,1])
activity_labels[i,1]
Y_test$ActivityID == activity_labels[i,1]
which(Y_test$ActivityID == activity_labels[i,1]
)
Y_test[,which(Y_test$ActivityID == activity_labels[i,1])]
Y_test[which(Y_test$ActivityID == activity_labels[i,1]), ]
Y_test[which(Y_test$ActivityID == activity_labels[i,1]), ] <- activity_labels[i,2]
View(Y_test)
View(Y_test)
Y_test      <- read.table ("file:///D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/UCI HAR Dataset/UCI HAR Dataset/test/Y_test.txt",stringsAsFactors=FALSE)
Y_test$V2 <- Y_test$V1
names(Y_test) <- c("ActivityID","Activity")
View(Y_test)
View(Y_test)
i=1
Y_test$ActivityID[which(Y_test$ActivityID == activity_labels[i,1]), ] <- activity_labels[i,2]
Y_test[which(Y_test$ActivityID == activity_labels[i,1]),2 ] <- activity_labels[i,2]
View(Y_test)
View(Y_test)
for (i in nrow(activity_labels))
{
Y_test[which(Y_test$ActivityID == activity_labels[i,1]),2 ] <- activity_labels[i,2]
}
View(Y_test)
View(Y_test)
nrow(activity_labels)
for (i in (1:nrow(activity_labels)))
{
Y_test[which(Y_test$ActivityID == activity_labels[i,1]),2 ] <- activity_labels[i,2]
}
View(Y_test)
View(Y_test)
# making train and test data frames
source("samsungData-TrainData.R")
source("samsungData-TestData.R")
# combining train and test datasets
FullData <- rbind(train,test)
#Creates a second, independent tidy data set with
#the average of each variable for each activity and each subject.
View(FullData)
View(FullData)
View(FullData)
View(FullData)
sample(0:1,20,replace=T)
sample(0:1,100,replace=T)
SampleRows.index <- sample(0:1,100,replace=T)
SampleData <- FullData[SampleRows.index,]
View(SampleData)
View(SampleData)
SampleRows.index <- sample(0:1,1000,replace=T)
SampleData <- FullData[SampleRows.index,]
View(SampleData)
View(SampleData)
SampleRows.index <- sample(0:10299,100,replace=T)
SampleData <- FullData[SampleRows.index,]
View(SampleData)
View(SampleData)
SampleRows.index <- sample(0:nrow(FullData),100,replace=T)
SampleData <- FullData[SampleRows.index,]
View(SampleData)
View(SampleData)
require(matrixStats,quietly=TRUE)
rowMeans(SampleData,dims=1)
rowMeans(SampleData)
require(matrixStats,quietly=TRUE)
install.packages("reshape2")
require(reshape2,quietly=TRUE)
source("NewDataSet.R")
names(SampleData)
names(SampleData)[4:15]
SampleMelt <- melt(SampleData, id=c("subjectID","ActivityID","Activity"),names(SampleData)[4:15])
SampleMelt
head(SampleMelt)
unique(SampleData$Activity)
unique(SampleData$subjectID)  #6
length(unique(SampleData$subjectID) )
unique(SampleData$Activity,SampleData$subjectID)  #6
NewData <- dcast(SampleData,subjectId,Activity~ variable,mean)
NewData <- dcast(SampleData,subjectID,Activity~ variable,mean)
NewData <- dcast(SampleData,subjectID + Activity ~ variable,mean)
SampleMelt <- melt(SampleData, id=c("subjectID","ActivityID","Activity"),measure.vars=names(SampleData)[4:15])
NewData <- dcast(SampleData,subjectID + Activity ~ variable,mean)
NewData <- dcast(SampleData, subjectID + Activity ~ names(SampleData)[4:15],mean)
melted <- melt(SampleData,(id.vars=c("activity","subject")))
melted <- melt(SampleData,(id.vars=c("Activity","subjectID")))
tidied <- dcast(melted, subject + activity ~ variable, mean)
tidied <- dcast(melted, subjectID + Activity ~ variable, mean)
View(train)
View(tidied)
View(tidied)
Fullmeletd <- melt (SampleData,(id.vars=c("Activity","subjectID")))
Fulltidied <- dcast(Fullmelted, subjectID + Activity ~ variable, mean)
Fullmeletd <- melt (SampleData,(id.vars=c("Activity","subjectID")))
Fulltidied <- dcast(Fullmelted, subjectID + Activity ~ variable, mean)
Fullmelted <- melt (SampleData,(id.vars=c("Activity","subjectID")))
Fulltidied <- dcast(Fullmelted, subjectID + Activity ~ variable, mean)
Fullmelted <- melt (FullData,(id.vars=c("Activity","subjectID")))
Fulltidied <- dcast(Fullmelted, subjectID + Activity ~ variable, mean)
#by Hamideh Iraj
#http//www.linkedin.com/pub/hamideh-iraj/74/368/7b
# making train and test data frames
source("samsungData-TrainData.R")
source("samsungData-TestData.R")
# combining train and test datasets
FullData <- rbind(train,test)
#Creates a second, independent tidy data set with
#the average of each variable for each activity and each subject.
source("NewDataSet.R")
View(Fulltidied)
View(Fulltidied)
write.table(Fulldata)
write.table(FullData)
write.table(FullData, file= "FullData.txt")
getwd()
install.packages("knitr")
write.table(FullData,file="listofnames.md", quote = FALSE,
col.names=FALSE, row.names=FALSE)
ls()
load("D:/coursera/Data Science Specialization/Getting and Cleaning Data/Peer Assessment/GetClean Project/GetClean/.RData")
#by Hamideh Iraj
#http//www.linkedin.com/pub/hamideh-iraj/74/368/7b
# making train and test data frames
source("samsungData-TrainData.R")
source("samsungData-TestData.R")
# combining train and test datasets
FullData <- rbind(train,test)
#Creates a second, independent tidy data set with
#the average of each variable for each activity and each subject.
source("NewDataSet.R")
#writing the data
write.table(FullData, file= "FullData.txt")
